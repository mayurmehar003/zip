In this Case we will Upload Multiple Files using form and Download in Zip Format through Report.
Step 1-Create table ""DOWNLOAD_DEMO"in which we will store multiple files.

  CREATE TABLE "DOWNLOAD_DEMO" 
   (	"ID" NUMBER(10,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NAME" VARCHAR2(500 CHAR), 
	"UPLOAD" BLOB, 
	"FILENAME" VARCHAR2(4000 CHAR), 
	"MIMETYPE" VARCHAR2(3000 CHAR), 
	"CHARSET" VARCHAR2(3000 CHAR), 
	"U_DATE" DATE, 
	"COMMENTS" VARCHAR2(1000 CHAR), 
	"DOWNLOADING" VARCHAR2(3000 CHAR), 
	 CONSTRAINT "DOWNLOAD_DEMO_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) ;



Make sure Allow multiple Files button should enable.



Create Process to handle multiple image upload and generation of object url into filename.


PLSQL Code-
DECLARE
    l_file_content BLOB;
    l_file_name VARCHAR2(4000);
    l_content_type VARCHAR2(4000);
    l_url VARCHAR2(4000);
    l_file_urls VARCHAR2(4000);
    l_files apex_t_varchar2;
BEGIN

    IF :P6_UPLOAD IS NOT NULL THEN

        l_files := apex_string.split(:P6_UPLOAD, ':');

        FOR i IN 1..l_files.count LOOP
            FOR c1 IN (SELECT * FROM apex_application_temp_files WHERE name = l_files(i)) LOOP
                l_file_content := c1.blob_content;
                l_file_name := c1.filename;
                l_content_type := c1.mime_type;

                Upload_File_To_Object_Storage(l_file_name, l_content_type, l_file_content, l_url);

                IF l_file_urls IS NULL THEN
                    l_file_urls := l_url; -- Initialize l_file_urls with the first URL
                ELSE
                    l_file_urls := l_file_urls || ',' || l_url; -- Append comma and URL for subsequent URLs
                END IF;

                --:P21_NEW_2 := l_file_content; -- Not sure if you need these lines
                --:P21_EMAIL := l_file_urls; -- Not sure if you need these lines
            END LOOP;
        END LOOP;

        :P6_FILENAME := l_file_urls;
    END IF;

END;



Step 3-Create Reference Page Item(P6_SELECTED_ID).It is used to set our object url when we click on download button in Report.

Create Dynamic Action to set url into P6_SELECTED_ID.


Generation Of Zip Code-
function download() {
  let zip = new JSZip();
  let urls = $v("P6_SELECTED_ID").split(','); // Get the URLs from page item P5_NEW and split into an array

  // Function to add a file from URL to the ZIP archive
  async function addFileFromUrl(url) {
    try {
      let response = await fetch(url);
      if (!response.ok) throw new Error('Network response was not ok');
      let blob = await response.blob();
      let fileName = url.substring(url.lastIndexOf('/') + 1);
      zip.file(fileName, blob);
    } catch (error) {
      console.error('Error fetching file:', error);
    }
  }

  // Function to add files from URLs to the ZIP archive
  async function addFilesFromUrls(urls) {
    for (let url of urls) {
      await addFileFromUrl(url);
    }
    // After all files are added, generate the ZIP and initiate download
    zip.generateAsync({ type: "blob" }).then((content) => {
      saveAs(content, "output.zip");

       window.location.href = 'https://ga85834a6daed8b-omfysadw.adb.ap-mumbai-1.oraclecloudapps.com/ords/r/db302/tte-application/zip-download?session=7972823143761';

    });
  }

  // Add files from URLs to the ZIP archive
  addFilesFromUrls(urls);
}

// Add event listener to all elements with class 'delete-icon'
document.querySelectorAll('.delete-icon').forEach(element => {
    element.addEventListener('click', function(event) {
        event.preventDefault(); // Prevent the default link behavior
        let url = this.getAttribute('data-id'); // Get the URL from the data-id attribute
        download(url); // Call the download function with the URL
    });
});


Step 4- Create Report for download zip file .


Note-Make sure below cdn links should put in File Urls as per below image

https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js
https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js
